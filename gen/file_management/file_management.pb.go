// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: file_management/file_management.proto

package file_management

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DocumentName  string                 `protobuf:"bytes,2,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DocumentType  string                 `protobuf:"bytes,5,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,6,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_file_management_file_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadRequest) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

func (x *UploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UploadRequest) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *UploadRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_file_management_file_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *UploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	mi := &file_file_management_file_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{2}
}

func (x *GetDocumentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type GetDocumentResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DocumentId      string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	DocumentName    string                 `protobuf:"bytes,2,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	DocumentType    string                 `protobuf:"bytes,3,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	S3Url           string                 `protobuf:"bytes,4,opt,name=s3_url,json=s3Url,proto3" json:"s3_url,omitempty"`
	DocumentContent []byte                 `protobuf:"bytes,5,opt,name=document_content,json=documentContent,proto3" json:"document_content,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDocumentResponse) Reset() {
	*x = GetDocumentResponse{}
	mi := &file_file_management_file_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentResponse) ProtoMessage() {}

func (x *GetDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{3}
}

func (x *GetDocumentResponse) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *GetDocumentResponse) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

func (x *GetDocumentResponse) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *GetDocumentResponse) GetS3Url() string {
	if x != nil {
		return x.S3Url
	}
	return ""
}

func (x *GetDocumentResponse) GetDocumentContent() []byte {
	if x != nil {
		return x.DocumentContent
	}
	return nil
}

type ListDocumentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsRequest) Reset() {
	*x = ListDocumentsRequest{}
	mi := &file_file_management_file_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsRequest) ProtoMessage() {}

func (x *ListDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{4}
}

func (x *ListDocumentsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsResponse) Reset() {
	*x = ListDocumentsResponse{}
	mi := &file_file_management_file_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsResponse) ProtoMessage() {}

func (x *ListDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{5}
}

func (x *ListDocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	DocumentName  string                 `protobuf:"bytes,2,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	DocumentType  string                 `protobuf:"bytes,3,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	S3Url         string                 `protobuf:"bytes,4,opt,name=s3_url,json=s3Url,proto3" json:"s3_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_file_management_file_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{6}
}

func (x *Document) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *Document) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

func (x *Document) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *Document) GetS3Url() string {
	if x != nil {
		return x.S3Url
	}
	return ""
}

type DeleteDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	mi := &file_file_management_file_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDocumentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type DeleteDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentResponse) Reset() {
	*x = DeleteDocumentResponse{}
	mi := &file_file_management_file_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentResponse) ProtoMessage() {}

func (x *DeleteDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_management_file_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentResponse.ProtoReflect.Descriptor instead.
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return file_file_management_file_management_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteDocumentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_file_management_file_management_proto protoreflect.FileDescriptor

const file_file_management_file_management_proto_rawDesc = "" +
	"\n" +
	"%file_management/file_management.proto\x12\x0efilemanagement\"\xc7\x01\n" +
	"\rUploadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\rdocument_name\x18\x02 \x01(\tR\fdocumentName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12#\n" +
	"\rdocument_type\x18\x05 \x01(\tR\fdocumentType\x12\x14\n" +
	"\x05chunk\x18\x06 \x01(\fR\x05chunk\"K\n" +
	"\x0eUploadResponse\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"N\n" +
	"\x12GetDocumentRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\"\xc2\x01\n" +
	"\x13GetDocumentResponse\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12#\n" +
	"\rdocument_name\x18\x02 \x01(\tR\fdocumentName\x12#\n" +
	"\rdocument_type\x18\x03 \x01(\tR\fdocumentType\x12\x15\n" +
	"\x06s3_url\x18\x04 \x01(\tR\x05s3Url\x12)\n" +
	"\x10document_content\x18\x05 \x01(\fR\x0fdocumentContent\"/\n" +
	"\x14ListDocumentsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"O\n" +
	"\x15ListDocumentsResponse\x126\n" +
	"\tdocuments\x18\x01 \x03(\v2\x18.filemanagement.DocumentR\tdocuments\"\x8c\x01\n" +
	"\bDocument\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12#\n" +
	"\rdocument_name\x18\x02 \x01(\tR\fdocumentName\x12#\n" +
	"\rdocument_type\x18\x03 \x01(\tR\fdocumentType\x12\x15\n" +
	"\x06s3_url\x18\x04 \x01(\tR\x05s3Url\"Q\n" +
	"\x15DeleteDocumentRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\"L\n" +
	"\x16DeleteDocumentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x80\x03\n" +
	"\x15FileManagementService\x12Q\n" +
	"\x0eUploadDocument\x12\x1d.filemanagement.UploadRequest\x1a\x1e.filemanagement.UploadResponse(\x01\x12V\n" +
	"\vGetDocument\x12\".filemanagement.GetDocumentRequest\x1a#.filemanagement.GetDocumentResponse\x12[\n" +
	"\fListDocument\x12$.filemanagement.ListDocumentsRequest\x1a%.filemanagement.ListDocumentsResponse\x12_\n" +
	"\x0eDeleteDocument\x12%.filemanagement.DeleteDocumentRequest\x1a&.filemanagement.DeleteDocumentResponseB\x15Z\x13gen/file_managementb\x06proto3"

var (
	file_file_management_file_management_proto_rawDescOnce sync.Once
	file_file_management_file_management_proto_rawDescData []byte
)

func file_file_management_file_management_proto_rawDescGZIP() []byte {
	file_file_management_file_management_proto_rawDescOnce.Do(func() {
		file_file_management_file_management_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_management_file_management_proto_rawDesc), len(file_file_management_file_management_proto_rawDesc)))
	})
	return file_file_management_file_management_proto_rawDescData
}

var file_file_management_file_management_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_file_management_file_management_proto_goTypes = []any{
	(*UploadRequest)(nil),          // 0: filemanagement.UploadRequest
	(*UploadResponse)(nil),         // 1: filemanagement.UploadResponse
	(*GetDocumentRequest)(nil),     // 2: filemanagement.GetDocumentRequest
	(*GetDocumentResponse)(nil),    // 3: filemanagement.GetDocumentResponse
	(*ListDocumentsRequest)(nil),   // 4: filemanagement.ListDocumentsRequest
	(*ListDocumentsResponse)(nil),  // 5: filemanagement.ListDocumentsResponse
	(*Document)(nil),               // 6: filemanagement.Document
	(*DeleteDocumentRequest)(nil),  // 7: filemanagement.DeleteDocumentRequest
	(*DeleteDocumentResponse)(nil), // 8: filemanagement.DeleteDocumentResponse
}
var file_file_management_file_management_proto_depIdxs = []int32{
	6, // 0: filemanagement.ListDocumentsResponse.documents:type_name -> filemanagement.Document
	0, // 1: filemanagement.FileManagementService.UploadDocument:input_type -> filemanagement.UploadRequest
	2, // 2: filemanagement.FileManagementService.GetDocument:input_type -> filemanagement.GetDocumentRequest
	4, // 3: filemanagement.FileManagementService.ListDocument:input_type -> filemanagement.ListDocumentsRequest
	7, // 4: filemanagement.FileManagementService.DeleteDocument:input_type -> filemanagement.DeleteDocumentRequest
	1, // 5: filemanagement.FileManagementService.UploadDocument:output_type -> filemanagement.UploadResponse
	3, // 6: filemanagement.FileManagementService.GetDocument:output_type -> filemanagement.GetDocumentResponse
	5, // 7: filemanagement.FileManagementService.ListDocument:output_type -> filemanagement.ListDocumentsResponse
	8, // 8: filemanagement.FileManagementService.DeleteDocument:output_type -> filemanagement.DeleteDocumentResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_file_management_file_management_proto_init() }
func file_file_management_file_management_proto_init() {
	if File_file_management_file_management_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_management_file_management_proto_rawDesc), len(file_file_management_file_management_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_management_file_management_proto_goTypes,
		DependencyIndexes: file_file_management_file_management_proto_depIdxs,
		MessageInfos:      file_file_management_file_management_proto_msgTypes,
	}.Build()
	File_file_management_file_management_proto = out.File
	file_file_management_file_management_proto_goTypes = nil
	file_file_management_file_management_proto_depIdxs = nil
}
